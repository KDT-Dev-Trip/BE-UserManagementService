spring.application.name=BE-user-management-service

# 서버 포트 설정
server.port=8082

# 데이터베이스 설정 - Docker 환경
spring.datasource.url=jdbc:mysql://devtrip-mysql:3306/devtrip-user-mgmt?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:1111}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA 설정
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# 로깅 레벨 설정
logging.level.org.hibernate.SQL=debug

# Kafka Configuration - Docker 환경
spring.kafka.bootstrap-servers=kafka:29092

# Kafka Consumer Configuration
spring.kafka.consumer.bootstrap-servers=kafka:29092
spring.kafka.consumer.group-id=user-service-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Kafka Producer Configuration
spring.kafka.producer.bootstrap-servers=kafka:29092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Redis Configuration - Docker 환경
spring.data.redis.host=redis
spring.data.redis.port=6379
spring.data.redis.timeout=60000

# Actuator 엔드포인트 노출
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true