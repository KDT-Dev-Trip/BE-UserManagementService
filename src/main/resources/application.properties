spring.application.name=BE-user-management-service

# ?? ?? ??
server.port=8082

# ?????? ?? - 로컬 MySQL 서버
spring.datasource.url=jdbc:mysql://localhost:3306/devtrip-user-mgmt?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:1111}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA ??
# ?????? ?? ? ???? ???? ????? ??? ?, ???? ????? ??.
# (??: create-?? ??? ?? ? ?? ??, update-???? ??, none-???? ??(?? ?? ??))
spring.jpa.hibernate.ddl-auto=none

# Hibernate Dialect 명시적 설정
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# ???? SQL ??? ??? ??
spring.jpa.show-sql=true

# SQL ??? ?? ?? ???
spring.jpa.properties.hibernate.format_sql=true

# Logging Configuration (SQL and debug logging)
logging.level.org.hibernate.SQL=debug
logging.level.ac.su.kdt=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.root=INFO
logging.level.org.springframework.web.servlet.DispatcherServlet=DEBUG

# Kafka Configuration - 로컬 Kafka 서버
spring.kafka.bootstrap-servers=localhost:9092

# Kafka Consumer Configuration
spring.kafka.consumer.bootstrap-servers=localhost:9092
# spring.kafka.consumer.group-id
spring.kafka.consumer.group-id=user-service-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Kafka Producer Configuration
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# 표준화된 카프카 토픽 설정
kafka.topics.auth-events=auth-events
kafka.topics.user-events=user-events
kafka.topics.mission-events=mission-events
kafka.topics.payment-events=payment-events
kafka.topics.evaluation-events=evaluation-events
kafka.topics.subscription-events=subscription-events

# Redis Configuration - 로컬 Redis 서버
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=60000

# Actuator & Monitoring (표준 설정)
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.security.enabled=false

# Spring Security 완전 비활성화
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
management.endpoint.info.enabled=true
management.metrics.export.prometheus.enabled=true
management.health.defaults.enabled=true
management.health.diskspace.enabled=true
management.health.db.enabled=true
management.health.kafka.enabled=false
management.health.redis.enabled=false

# Application Info
info.app.name=${spring.application.name}
info.app.version=@project.version@
info.app.description=DevTrip User Management Service - Users & Teams

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true
springdoc.packages-to-scan=ac.su.kdt.beusermanagementservice.controller
springdoc.paths-to-match=/api/**
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha

# Disable default Spring Security if accidentally included
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

